apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-ingress-tcp-microk8s-conf
  namespace: ingress
data:
  #<port>: "<namespace>/<service name>:<port>"
  8000: "development/server-service:8000"
---
# This *replaces* the default microk8s ingress controller (which listens only on ports 80 and 443) with one that listens
# to any port specified in the various ConfigMaps. In our case this is port 8000, as that is the port we're using for
# development purposes. Note that if you try to use microk8s with this controller in place, you'll have to add your
# ports and service mappings to the config map, and it's possible that this may mess with the functionality of actual
# Ingress specifications.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nginx-ingress-microk8s-controller
  namespace: ingress
  labels:
    microk8s-application: nginx-ingress-microk8s
spec:
  selector:
    matchLabels:
      name: nginx-ingress-microk8s
  template:
      metadata:
        labels:
          name: nginx-ingress-microk8s
      spec:
        terminationGracePeriodSeconds: 60
        dnsPolicy: ClusterFirstWithHostNet
        # Note that hostNetwork is required so that we can specify arbitrary ports in the ConfigMap
        hostNetwork: true
        serviceAccountName: nginx-ingress-microk8s-serviceaccount
        containers:
        - image: k8s.gcr.io/ingress-nginx/controller:v0.44.0
          name: nginx-ingress-microk8s
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            runAsUser: 101 # www-data
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
          - name: health
            containerPort: 10254
            hostPort: 10254
          args:
          - /nginx-ingress-controller
          - --configmap=$(POD_NAMESPACE)/nginx-load-balancer-microk8s-conf
          - --tcp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-tcp-microk8s-conf
          - --udp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-udp-microk8s-conf
          - --ingress-class=public
          - --publish-status-address=127.0.0.1
